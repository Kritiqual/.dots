#!/usr/bin/env zsh
##==================================================================##
##                                                                  ##
##                      DEFINING FUNC AND VARS                      ##
##                                                                  ##
##==================================================================##
##──── Initialization functions ──────────────────────────────────────
install_dependencies() {
    if [[ ! -f /usr/bin/fzf ]]; then
        echo "Installing missing dependencies... "
        sudo pacman -S --noconfirm --needed fzf
    fi
}
get_database() {
    echo "Syncing database... "
    sudo pacman -Syy
    echo "Creating database... "
    sudo pacman -Fyy
    echo '1' >>~/.cache/helper
    clear
}
color_and_modevars() {
    RS="\e[0m"

    # Foreground colors
    BG="\e[1;30m"
    FG="\e[1;97m"
    RED="\e[1;31m"
    GREEN="\e[1;32m"
    YELLOW="\e[1;33m"
    BLUE="\e[1;34m"
    MAGENTA="\e[1;35m"
    CYAN="\e[1;36m"
    GRAY="\e[1;90m"

    # Background colors
    BBG="\e[1;40m"
    BFG="\e[1;107m"
    BRED="\e[1;41m"
    BGREEN="\e[1;42m"
    BYELLOW="\e[1;43m"
    BBLUE="\e[1;44m"
    BMAGENTA="\e[1;45m"
    BCYAN="\e[1;46m"
    BGRAY="\e[1;100m"

    # VARS
    APP="${GREEN}pacman_fzf"
    CMD="${GREEN}pq"
    SWITCH="${MAGENTA}"
    ARGS="${BLUE}"
    TITLE="${YELLOW}"
    NALLOW="${RED}not allowed"
    ALLOW="${GREEN}is allowed"
    ERR="[${RED}ERR${FG}]"
    MS="${CYAN}Multi-selection"

    # Mode vars
    sw=("S" "R" "U" "C" "M")
    md=("p" "a" "f" "h")
    for i in "${sw[@]}"; do
        declare s${i}=0
    done
    for i in "${md[@]}"; do
        declare m${i}=0
    done
}

##──── Main switches ─────────────────────────────────────────────────
#: [I/R/C]
#: I/R/C ==> Show I/R/C
#: I/R/C + h ==> Install/Remove/Change help
#: I/R/C + ... ==> Install/Remove/Change ...
#: I/R/C + .. + h ==> Install/Remove/Change help

#: [U]
#: U ==> Show U
#: U + h ==> Updater help
#: U + p + f ==> Updater --full
#: U + a + f ==> Updater --full
#: U + p + a ==> Updater --full
#: U + P + a + f ==> Updater --full

#: [M]
#: M ==> Show M
#: M + h ==> Menu help

installer() {
    echo "Installer mode"
}

remover() {
    echo "Remover mode"
}

updater() {
    echo "Updater mode"
}

chooser() {
    echo "Chooser mode"
}

show_menu() {
    echo "Show menu mode"
}

##──── Core function ─────────────────────────────────────────────────
core_function() {
    # If it is main switches, check for optarg
    # If optarg is main switches, throw an error
    # Otherwise, use that optarg for main switches
    install_dependencies
    color_and_modevars

    if [[ ! -f ~/.cache/helper ]]; then
        touch ~/.cache/helper
        echo "# $(date +'%T %a, %Y/%m/%d')" >~/.cache/helper
        echo "# Generated by pacman_fzf" >>~/.cache/helper
    else
        [[ -z "$(sed -n '3p' ~/.cache/helper)" ]] &&
            chooser || HELPER=$(sed -n '3p' ~/.cache/helper)
        [[ -z "$(sed -n '4p' ~/.cache/helper)" ]] &&
            get_database || HAS_DB=$(sed -n '4p' ~/.cache/helper)
    fi

    export pm="${HELPER}"
    [[ ${pm} != yay || ${pm} != paru ]] &&
        export spm="sudo ${pm}"

    if [[ $# -eq 0 ]]; then
        installer
    else
        while getopts ":I:R:U:C:M" opt; do
            case "$opt" in
            I | R | U | C | M) echo $OPTARG;;
            # h) mh=1 ;;
            :)
                case $OPTARG in
                I) installer ;;
                R) remover ;;
                U) updater ;;
                C) chooser ;;
                M) show_menu ;;
                esac
                ;;
            ?)
                echo -e "${ERR} ${APP}${RS}: Invalid options '${SWITCH}${OPTARG}${RS}'"
                break
                ;;
            esac
        done
    fi
    echo $opt
    [[ $mh -gt 0 ]] && echo "mh" || echo "-mh"
    # unset pm spm HELPER HAS_DB
}
##==================================================================##
##                                                                  ##
##                              EXECUTE                             ##
##                                                                  ##
##==================================================================##
core_function "${@}"
